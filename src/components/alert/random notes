We need a new table in the backend called 'Event Log'.
The event log will keep track of:
Event ID, Last Modified Date, Admin Action, Admin ID

Event log should be updated every time an admin does an action.

For the API endpoint, we'll need to be able to get the event log and it should return:
Event Name, Last Modified Date, Admin Action, Admin Name


Alerts = notifactions for events that were added / updated / deleted from when the user last logged in.
Idea: Event contains a date_added. 
    Get all events, and filter out events that contain a date_added from before the user last logged in.
    In other words, only keep events that were added / updated / deleted from when the user last logged in.
    These will represent our alerts as per the definition above.

    Though to do this, we'll need to know when the user last logged in: some backend work will likely be required.
        Recommended backend work: 
            1. Add an API endpoint to get user's previous session
            2. Event table needs new attributes: 'Last modified', and '
        

As a sidenote, we'll need to be able to fetch an admin's name given their admin ID since Event only contains admin_id


colours + first letter for each name (see ui proposal)

add an 'empty' string inside alert panel when it's empty